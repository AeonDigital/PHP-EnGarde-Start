<h1><?php echo $viewData->viewTitle; ?></h1>
<p>
    Locale: <?php echo $this->routeConfig->getResponseLocale(); ?><br />
    Mime: <?php echo $this->routeConfig->getResponseMime(); ?><br />
    MimeType: <?php echo $this->routeConfig->getResponseMimeType(); ?><br />
</p>


<hr />


<h2>$this->serverConfig</h2>
<p>
    Esta instância tem como natureza dispor de todas as informações coletadas até o momento. Desde a requisição em sí,
    passando pelas configurações da Aplicação, itens de segurança e por fim com relação a própria Rota que está sendo
    executada.
</p>



<pre>
Interface   : AeonDigital\EnGarde\Interfaces\Config\iServer
Classe      : AeonDigital\EnGarde\Config\Server

&#187; $this->serverConfig
    │
    │   Data e hora do momento em que a requisição chegou ao domínio.
    ├─  getNow() : \DateTime
    │
    │
    │   Resgata a versão atual do framework.
    ├─  getVersion() : string
    │
    │
    │   Resgata um array associativo contendo todas as variáveis definidas para o servidor no
    │   momento atual. Normalmente retorna o conteúdo de ``$_SERVER``.
    ├─  getServerVariables() : array
    │
    │
    │   Baseado nos dados da requisição que está sendo executada.
    │   Retorna uma coleção de headers ``HTTP`` definidos.
    ├─  getRequestHeaders() : array
    │
    │
    │   Baseado nos dados da requisição que está sendo executada.
    │   Retorna a versão do protocolo ``HTTP``.
    ├─  getRequestHTTPVersion() : string
    │
    │
    │   Baseado nos dados da requisição que está sendo executada.
    │   Indica se a requisição está exigindo o uso de ``HTTPS``.
    ├─  getRequestIsUseHTTPS() : bool
    │
    │
    │   Baseado nos dados da requisição que está sendo executada.
    │   Retorna o método ``HTTP`` que está sendo usado.
    ├─  getRequestMethod() : string
    │
    │
    │   Baseado nos dados da requisição que está sendo executada.
    │   Retorna ``http`` ou ``https`` conforme o protocolo que está sendo utilizado pela
    │   requisição.
    ├─  getRequestProtocol() : string
    │
    │
    │   Baseado nos dados da requisição que está sendo executada.
    │   Retorna o nome do domínio onde o servidor está operando.
    ├─  getRequestDomainName() : string
    │
    │
    │   Baseado nos dados da requisição que está sendo executada.
    │   Retorna a parte ``path`` da ``URI`` que está sendo executada.
    ├─  getRequestPath() : string
    │
    │
    │   Baseado nos dados da requisição que está sendo executada.
    │   Retorna a porta ``HTTP`` que está sendo evocada.
    ├─  getRequestPort() : int
    │
    │
    │   Baseado nos dados da requisição que está sendo executada.
    │   Retorna os cookies passados pelo ``UA`` em seu formato bruto.
    ├─  getRequestCookies() : string
    │
    │
    │   Baseado nos dados da requisição que está sendo executada.
    │   Retorna os querystrings definidos na ``URI`` em seu formato bruto.
    ├─  getRequestQueryStrings() : string
    │
    │
    │   Baseado nos dados da requisição que está sendo executada.
    ├─  getRequestFiles() : array
    │
    │
    │
    │
    │   Baseado nos dados da requisição que está sendo executada.
    │   Retorna uma string que representa toda a ``URI`` que está sendo acessada no momento.
    ├─  getCurrentURI() : string
    │
    │
    │   Retorna o ``IP`` do usuário que está no momento visitando o site.
    │   Um valor vazio em retorno indica que não foi possível identificar o ``IP``.
    ├─  getClientIP() : string
    │
    │
    │   Resgata toda a coleção de informações passadas na requisição.
    ├─  getPostedData() : array
    │
    │
    │   Retorna o endereço completo do diretório onde o domínio está sendo executado.
    ├─  getRootPath() : string
    │
    │
    │   Retorna o tipo de ambiente que o domínio está rodando no momento.
    ├─  getEnvironmentType() : string
    │
    │
    │   Retorna ``true`` se o domínio está em modo de debug.
    ├─  getIsDebugMode() : bool
    │
    │
    │   Retorna ``true`` se for para a aplicação alvo atualizar suas respectivas rotas.
    ├─  getIsUpdateRoutes() : bool
    │
    │
    │   Retorna a coleção de nomes de aplicações instaladas no domínio
    ├─  getHostedApps() : array
    │
    │
    │   Retorna o nome da aplicação padrão do domínio.
    ├─  getDefaultApp() : string
    │
    │
    │   Retorna o timezone do domínio.
    ├─  getDateTimeLocal() : string
    │
    │
    │   Retorna o tempo máximo (em segundos) para a execução das requisições.
    ├─  getTimeout() : int
    │
    │
    │   Valor máximo (em Mb) para o upload de um arquivo.
    ├─  getMaxFileSize() : int
    │
    │
    │   Valor máximo (em Mb) para a postagem de dados.
    ├─  getMaxPostSize() : int
    │
    │
    │   Resgata o caminho até a view que deve ser enviada ao ``UA`` em caso de
    │   erros no domínio.
    ├─  getPathToErrorView(bool $fullPath = false) : string
    │
    │
    │   Resgata o nome da classe responsável por iniciar a aplicação.
    ├─  getApplicationClassName() : string
    │
    │
    │   Retorna o nome da aplicação que deve responder a requisição ``HTTP`` atual.
    ├─  getApplicationName() : string
    │
    │
    │   Retorna a URI que está sendo requisitada em ``nível de aplicação``
    ├─  getApplicationRequestUri() : string
    │
    │
    │
    │
    │   Retorna a instância ``AeonDigital\Interfaces\Http\Message\iServerRequest`` a ser usada.
    │   - Veja mais a seguir.
    ├─  getServerRequest() : iServerRequest
    │
    │
    │   Retorna a instância ``AeonDigital\EnGarde\Config\iApplication``.
    │   - Veja mais a seguir.
    ├─  getApplicationConfig() : iApplication
    │
    │
    │   Retorna a instância ``AeonDigital\EnGarde\Config\iSecurity`` a ser usada.
    │   - Veja mais a seguir.
    ├─  getSecurityConfig() : ?iSecurity
    │
    │
    │   Retorna a instância ``AeonDigital\EnGarde\Config\iRoute`` a ser usada.
    │   - Veja mais a seguir.
    └─  getRouteConfig() : ?iRoute




</pre>



<hr />
<a href="/documentation/action_serverrequest">Objeto ServerRequest</a>
